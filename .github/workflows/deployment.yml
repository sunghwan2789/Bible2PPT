name: Deployment
# By listening release event, variables are set as:
#
# * `${{ github.ref }}`: '/refs/tags/v1.0.0'
# * `${{ github.events }}`: See https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#release
#
# See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release
on:
  release:
    types: [released]

env:
  PUBLISH_DIR: publish

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        runtime: [win-x86, win-x64]
    env:
      PROJECT: Bible2PPT
      RUNTIME: ${{ matrix.runtime }}
    steps:
      - uses: microsoft/setup-msbuild@v1.0.2
      - uses: actions/checkout@v2
      - name: Parse semantic version
        id: parse-version
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'
      - name: Restore
        run: msbuild -restore -p:RuntimeIdentifier=${env:RUNTIME}
      - name: Build
        run: |
          msbuild ${env:PROJECT} -p:Version=${env:VERSION} -p:Configuration=Release `
            -t:publish -p:PublishDir=${env:PUBLISH_DIR} -p:ErrorOnDuplicatePublishOutputFiles=false `
            -p:RuntimeIdentifier=${env:RUNTIME} -p:PublishSingleFile=true
        env:
          VERSION: ${{ steps.parse-version.outputs.fullversion }}
      - name: Package
        id: package
        run: |
          $filename = "Bible2PPT-${env:VERSION}-${env:RUNTIME}.zip"
          Compress-Archive -Path ${env:PROJECT}/${env:PUBLISH_DIR}/* -DestinationPath ${filename}
          Write-Host ::set-output name=filename::${filename}
        env:
          VERSION: ${{ steps.parse-version.outputs.fullversion }}
      - name: Upload
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.package.outputs.filename }}
          asset_name: ${{ steps.package.outputs.filename }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
